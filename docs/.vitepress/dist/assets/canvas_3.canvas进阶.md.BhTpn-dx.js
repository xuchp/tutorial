import{_ as s,c as a,o as i,a8 as t}from"./chunks/framework.Uk78KS4B.js";const g=JSON.parse('{"title":"Canvas 进阶","description":"","frontmatter":{},"headers":[],"relativePath":"canvas/3.canvas进阶.md","filePath":"canvas/3.canvas进阶.md"}'),n={name:"canvas/3.canvas进阶.md"},h=t(`<h1 id="canvas-进阶" tabindex="-1">Canvas 进阶 <a class="header-anchor" href="#canvas-进阶" aria-label="Permalink to &quot;Canvas 进阶&quot;">​</a></h1><h3 id="_1-canvas颜色样式和阴影" tabindex="-1">1. Canvas颜色样式和阴影 <a class="header-anchor" href="#_1-canvas颜色样式和阴影" aria-label="Permalink to &quot;1. Canvas颜色样式和阴影&quot;">​</a></h3><h4 id="_1-1-设置填充色和描边的颜色" tabindex="-1">1.1 设置填充色和描边的颜色 <a class="header-anchor" href="#_1-1-设置填充色和描边的颜色" aria-label="Permalink to &quot;1.1 设置填充色和描边的颜色&quot;">​</a></h4><ul><li>fillStyle：设置或返回用于填充绘画的颜色</li><li>strokeStyle：设置或返回用于笔触的颜色</li></ul><p>以上两个值都可以接受颜色名、16 进制数据、rgb 值，甚至 rgba。一般先进行设置样式然后进行绘制。</p><p>例如：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.strokeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;red&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.strokeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;#ccc&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.strokeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;rgb(255, 0, 0)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.strokeStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;rgba(255, 0, 0, 0.6)&#39;</span></span></code></pre></div><h4 id="_1-2-设置阴影" tabindex="-1">1.2 设置阴影 <a class="header-anchor" href="#_1-2-设置阴影" aria-label="Permalink to &quot;1.2 设置阴影&quot;">​</a></h4><p>类比于 CSS3 的阴影</p><pre><code>- shadowColor：设置或返回用于阴影的颜色
- shadowBlur：设置或返回用于阴影的模糊级别，大于 1 的正整数，数值越高，模糊程度越大
- shadowOffsetX：设置或返回阴影形状的水平距离
- shadowOffsetY：设置或返回阴影形状的垂直距离
</code></pre><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.fillStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;rgba(255, 0, 0, 0.9)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.shadowColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;teal&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.shadowBlur </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.shadowOffsetX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.shadowOffsetY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fillRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,11),l=[h];function e(k,p,r,d,E,c){return i(),a("div",null,l)}const y=s(n,[["render",e]]);export{g as __pageData,y as default};
