import{_ as t,c as r,o as a,a8 as o}from"./chunks/framework.Uk78KS4B.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"canvas/路径.md","filePath":"canvas/路径.md"}'),e={name:"canvas/路径.md"},d=o('<h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><h4 id="_1-fill" tabindex="-1">1. fill() <a class="header-anchor" href="#_1-fill" aria-label="Permalink to &quot;1. fill()&quot;">​</a></h4><p><strong>作用</strong>：填充当前的图像/路径。默认是黑色。</p><p><strong>提示</strong>：请使用 <a href="./颜色、样式和阴影.html#_1-fillstyle">fillStyle</a> 属性来填充另一种颜色/渐变</p><p><strong>注意</strong>：如果路径未关闭，那么 fIll() 方法会从路径结束点到开始点之间添加一条线，已关闭路径（正如 <a href="#_5-closepath">closePath()</a>一样），然后填充该路径。</p><p><strong>JavaScript 语法</strong>：<code>context.fill();</code></p><h4 id="_2-stroke" tabindex="-1">2. stroke() <a class="header-anchor" href="#_2-stroke" aria-label="Permalink to &quot;2. stroke()&quot;">​</a></h4><p><strong>作用</strong>：实际地绘制出通过 moveTo() 和 lineTo() 方法定义的路径。默认颜色是黑色。</p><p><strong>提示</strong>：请使用 <a href="./颜色、样式和阴影.html#_2-strokestyle">strokeStyle</a> 属性来填充另一种颜色/渐变</p><p><strong>JavaScript 语法</strong>：<code>context.stroke();</code></p><h4 id="_3-beginpath" tabindex="-1">3. beginPath() <a class="header-anchor" href="#_3-beginpath" aria-label="Permalink to &quot;3. beginPath()&quot;">​</a></h4><p><strong>作用</strong>：开始一条路径，或者重置当前的路径</p><p><strong>JavaScript 语法</strong>：<code>context.beginPath();</code></p><h4 id="_4-moveto" tabindex="-1">4. moveTo() <a class="header-anchor" href="#_4-moveto" aria-label="Permalink to &quot;4. moveTo()&quot;">​</a></h4><p><strong>作用</strong>：把路径移动到画布中的指定点，不创建线条</p><p><strong>提示</strong>：请使用 <a href="#_2-stroke">stroke()</a> 方法在画布上绘制确切的路径。</p><p><strong>JavaScript 语法</strong>：<code>context.moveTo(x, y);</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>路径的目标位置的 x 坐标</td></tr><tr><td>y</td><td>路径的目标位置的 y 坐标</td></tr></tbody></table><h4 id="_5-closepath" tabindex="-1">5. closePath() <a class="header-anchor" href="#_5-closepath" aria-label="Permalink to &quot;5. closePath()&quot;">​</a></h4><p><strong>作用</strong>：创建从当前点到开始点的路径。</p><p><strong>提示</strong>：请使用 <a href="#_2-stroke">stroke()</a> 方法在画布上绘制确切的路径。</p><p><strong>提示</strong>：请使用 <a href="#_1-fill">fill()</a> 方法来填充图像(默认是黑色)。请使用 <a href="./颜色、样式和阴影.html#_2-strokestyle">strokeStyle</a> 属性来填充另一种颜色/渐变</p><p><strong>JavaScript 语法</strong>：<code>context.closePath();</code></p><h4 id="_6-lineto" tabindex="-1">6. lineTo() <a class="header-anchor" href="#_6-lineto" aria-label="Permalink to &quot;6. lineTo()&quot;">​</a></h4><p><strong>作用</strong>：添加一个新点，然后创建从该点到画布中最后指定点的线条(该方法并不会创建线条)。</p><p><strong>提示</strong>：请使用 <a href="#_2-stroke">stroke()</a> 方法在画布上绘制确切的路径。</p><p><strong>JavaScript 语法</strong>：<code>context.lineTo(x, y);</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>路径的目标位置的 x 坐标</td></tr><tr><td>y</td><td>路径的目标位置的 y 坐标</td></tr></tbody></table><h4 id="_7-clip" tabindex="-1">7. clip() <a class="header-anchor" href="#_7-clip" aria-label="Permalink to &quot;7. clip()&quot;">​</a></h4><p><strong>作用</strong>：从原画布中裁剪任意形状和尺寸。</p><p>**提示：**一旦剪切了某个区域，则所有之后的绘图都会被限制在被剪切的区域内（不能访问画布上的其他区域）。您也可以在使用 clip() 方法前通过使用 save() 方法对当前画布区域进行保存，并在以后的任意时间对其进行恢复（通过 restore() 方法）。</p><p><strong>JavaScript 语法</strong>：<code>context.clip();</code></p><h4 id="_8-quadraticcurveto" tabindex="-1">8. quadraticCurveTo() <a class="header-anchor" href="#_8-quadraticcurveto" aria-label="Permalink to &quot;8. quadraticCurveTo()&quot;">​</a></h4><p><strong>作用</strong>：通过使用表示二次贝塞尔曲线的指定控制点，向当前路径添加一个点。</p><p>二次贝塞尔曲线需要两个点。第一个点用于二次贝塞尔曲线计算中的控制点，第二个点是曲线的结束点。曲线的开始点是当前路径中的最后一个点。如果路径不存在，那么请使用 <a href="#_3-beginpath">beginPath()</a> 和 <a href="#_4-moveto">moveTo()</a> 方法来定义开始点。</p><p><img src="https://raw.githubusercontent.com/xuchp/typora-pics/main/canvas/img_quadraticcurve.gif" alt="二次贝塞尔曲线"></p><ul><li>开始点：moveTo(20, 20)</li><li>控制点：quadraticCurveTo(<strong>20</strong>, <strong>100</strong>, 200, 20)</li><li>结束点：quadraticCurveTo(20, 100, <strong>200</strong>, <strong>20</strong>)</li></ul><p><strong>JavaScript 语法</strong>：<code>context.quadraticCurveTo(cpx, cpy, x, y);</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>cpx</td><td>贝塞尔控制点的 x 坐标</td></tr><tr><td>cpy</td><td>贝塞尔控制点的 y 坐标</td></tr><tr><td>x</td><td>结束点的 x 坐标</td></tr><tr><td>y</td><td>结束点的 y 坐标</td></tr></tbody></table><h4 id="_9-beziercurveto" tabindex="-1">9. bezierCurveTo() <a class="header-anchor" href="#_9-beziercurveto" aria-label="Permalink to &quot;9. bezierCurveTo()&quot;">​</a></h4><p><strong>作用</strong>：通过使用表示三次贝塞尔曲线的制定控制点，向当前路径添加一个点</p><p>三次贝塞尔曲线需要三个点。前两个是用于贝塞尔计算值的控制点，第三个点是曲线的结束点。曲线的开始点是当前路径中最后一个点。如果路径不存在，那么请使用 <a href="#_3-beginpath">beginPath()</a> 和 <a href="#_4-moveto">moveTo()</a> 方法来定义开始点。</p><p><img src="https://raw.githubusercontent.com/xuchp/typora-pics/main/canvas/img_beziercurve.gif" alt="三次贝塞尔曲线"></p><ul><li>开始点：moveTo(20,20)</li><li>控制点 1：bezierCurveTo(<strong>20,100</strong>,200,100,200,20)</li><li>控制点 2：bezierCurveTo(20,100,<strong>200,100</strong>,200,20)</li><li>结束点：bezierCurveTo(20,100,200,100,<strong>200,20</strong>)</li></ul><p><strong>JavaScript 语法</strong>：<code>context.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>cp1x</td><td>第一个贝塞尔控制点的 x 坐标</td></tr><tr><td>cp1y</td><td>第一个贝塞尔控制点的 y 坐标</td></tr><tr><td>cp2x</td><td>第二个贝塞尔控制点的 x 坐标</td></tr><tr><td>cp2y</td><td>第二个贝塞尔控制点的 y 坐标</td></tr><tr><td>x</td><td>结束点的 x 坐标</td></tr><tr><td>y</td><td>结束点的 y 坐标</td></tr></tbody></table><h4 id="_10-arc" tabindex="-1">10. arc() <a class="header-anchor" href="#_10-arc" aria-label="Permalink to &quot;10. arc()&quot;">​</a></h4><p><strong>作用</strong>：创建弧/曲线(用于创建圆或部分圆)</p><p><strong>提示</strong>：如需通过 <code>arc()</code> 来创建圆，请把其实角设置为 0，结束角设置为<code>2* Math.PI</code></p><p><strong>提示</strong>：请使用 <a href="#_2-stroke">stroke()</a> 或 <a href="#_1-fill">fill()</a> 方法在画布上绘制实际的弧。</p><p><img src="https://raw.githubusercontent.com/xuchp/typora-pics/main/canvas/img_arc.gif" alt="An arc"></p><ul><li>中心：arc(<strong>100, 75</strong>, 50, 0 * Math.PI, 1.5 * Math.PI)</li><li>起始角：arc(100, 75, 50, <strong>0 * Math.PI</strong>, 1.5 * Math.PI)</li><li>结束角：arc(100, 75, 50, 0 * Math.PI, <strong>1.5 * Math.PI</strong>)</li></ul><p><strong>JavaScript 语法</strong>：<code>context.arc(x,y,r,sAngle,eAngle,counterclockwise);</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>圆的中心的 x 坐标</td></tr><tr><td>y</td><td>圆的中心的 y 坐标</td></tr><tr><td>r</td><td>圆的半径</td></tr><tr><td>sAngle</td><td>起始角，以弧度计(弧的圆心的三点钟位置是 0 度)</td></tr><tr><td>eAngle</td><td>结束角，以弧度计</td></tr><tr><td>counterclockwise</td><td>可选。规定应该逆时针还是顺时针绘图。false = 顺时针，true = 逆时针，默认是 false</td></tr></tbody></table><h4 id="_11-arcto" tabindex="-1">11. arcTo() <a class="header-anchor" href="#_11-arcto" aria-label="Permalink to &quot;11. arcTo()&quot;">​</a></h4><p><strong>作用</strong>：在画布上创建介于两个切线之间的弧、曲线</p><p><img src="https://raw.githubusercontent.com/xuchp/typora-pics/main/canvas/img_canvas_arcto.png" alt="img"></p><p><strong>提示</strong>：请使用 <a href="#_2-stroke">stroke()</a> 方法在画布上绘制确切的弧</p><p><strong>JavaScript 语法</strong>：<code>context.arcTo(x1, y1, x2, y2, r);</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x1</td><td>两切线交点的横坐标</td></tr><tr><td>y1</td><td>两切线交点的纵坐标</td></tr><tr><td>x2</td><td>第二条切线上一点的横坐标</td></tr><tr><td>Y2</td><td>第二条切线上一点的纵坐标</td></tr><tr><td>r</td><td>弧的半径</td></tr></tbody></table><p>其中第一条切线上的任意一点的横纵坐标是伤害一次点的位置。</p><h4 id="_12-ispointpath" tabindex="-1">12. isPointPath() <a class="header-anchor" href="#_12-ispointpath" aria-label="Permalink to &quot;12. isPointPath()&quot;">​</a></h4><p><strong>作用</strong>：如果指定点位于当前路径中，<code>isPointPath()</code> 方法返回 true，否则返回 false。</p><p><strong>JavaScript 语法</strong>：<code>context.isPointpath(x, y)</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>要测试的 x 坐标</td></tr><tr><td>y</td><td>要测试的 y 坐标</td></tr></tbody></table>',72),n=[d];function s(c,i,h,p,l,g){return a(),r("div",null,n)}const _=t(e,[["render",s]]);export{b as __pageData,_ as default};
