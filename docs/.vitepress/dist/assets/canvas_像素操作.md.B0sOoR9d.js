import{_ as t,c as a,o as e,a8 as d}from"./chunks/framework.Uk78KS4B.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"canvas/像素操作.md","filePath":"canvas/像素操作.md"}'),r={name:"canvas/像素操作.md"},o=d('<h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><h4 id="_1-width" tabindex="-1">1. width <a class="header-anchor" href="#_1-width" aria-label="Permalink to &quot;1. width&quot;">​</a></h4><p><strong>作用</strong>：返回 ImageData 对象的宽度，以像素计</p><p><strong>JavaScript 语法</strong>：<code>imgData.width</code></p><h4 id="_2-height" tabindex="-1">2. height <a class="header-anchor" href="#_2-height" aria-label="Permalink to &quot;2. height&quot;">​</a></h4><p><strong>作用</strong>：返回 ImageData 对象的高度，以像素计</p><p><strong>JavaScript 语法</strong>：<code>imgData.height</code></p><h4 id="_3-data" tabindex="-1">3. data <a class="header-anchor" href="#_3-data" aria-label="Permalink to &quot;3. data&quot;">​</a></h4><p><strong>作用</strong>：返回一个对象，其包含指定的 ImageData 对象的图像数据。</p><p>对于 ImageData 对象中的每个像素，都存在着四方面的信息，即 RGBA 值：</p><p>R - 红色(0-255)</p><p>G - 绿色(0-255)</p><p>B - 蓝色(0-255)</p><p>A - alpha 通道(0-255；0 是透明，255 是完全可见)</p><p>color/alpha 信息以数组形式存在，并存储于 ImageData 对象的 data 属性中。</p><p><strong>JavaScript 语法</strong>：<code>imgData.data</code></p><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><h4 id="_1-createimagedata" tabindex="-1">1. createImageData() <a class="header-anchor" href="#_1-createimagedata" aria-label="Permalink to &quot;1. createImageData()&quot;">​</a></h4><p><strong>作用</strong>：创建新的空白 ImageData 对象。新对象默认像素值 transparent black。</p><p>对于 ImageData 对象中的每个像素，都存在着四方面的信息，即 RGBA 值：</p><p>R - 红色(0-255)</p><p>G - 绿色(0-255)</p><p>B - 蓝色(0-255)</p><p>A - alpha 通道(0-255；0 是透明，255 是完全可见)</p><p>因此，transparent black 表示(0,0,0,0)</p><p>color/alpha 信息以数组形式存在，并且由于数组包含了每个像素的四条信息，所以数组的大小是 ImageData 对象的四倍：width _ height _ 4。(获取数组大小有更简单的办法，就是使用 <code>ImageDataObject.data.length</code>)</p><p><strong>提示</strong>：操作完成数组的 color/alpha 信息后，您可以使用 <a href="#_3-putimagedata">putImageData()</a> 方法将图像数据拷贝回画布上。</p><p><strong>JavaScript 语法</strong></p><table><thead><tr><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>context.createImageData(width,height)</td><td>以指定的尺寸(像素)创建新的 ImageData 对象</td></tr><tr><td>context.createImageData(imageData)</td><td>创建与指定的另一个 ImageData 对象出现相同的新的 ImageData 对象(不会复制图像数据)</td></tr></tbody></table><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>width</td><td>ImageData 对象的宽度，以像素计</td></tr><tr><td>height</td><td>ImageData 对象的高度，以像素计</td></tr><tr><td>imageData</td><td>另一个 ImageData 对象</td></tr></tbody></table><h4 id="_2-getimagedata" tabindex="-1">2. getImageData() <a class="header-anchor" href="#_2-getimagedata" aria-label="Permalink to &quot;2. getImageData()&quot;">​</a></h4><p><strong>作用</strong>：返回 ImageData 对象，该对象拷贝了画布指定矩形的像素数据。</p><p><strong>注意</strong>：ImageData 对象不是图像，它规定了画布上一部分(矩形)，并保存了该矩形内每个像素的信息。</p><p><strong>JavaScript 语法</strong>：<code>context.getImageData(x, y, width, height);</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x</td><td>开始复制的左上角位置的 x 坐标(以像素计)</td></tr><tr><td>y</td><td>开始复制的左上角位置的 y 坐标(以像素计)</td></tr><tr><td>width</td><td>要复制的矩形区域的宽度</td></tr><tr><td>height</td><td>要复制的矩形区域的高度</td></tr></tbody></table><h4 id="_3-putimagedata" tabindex="-1">3. putImageData() <a class="header-anchor" href="#_3-putimagedata" aria-label="Permalink to &quot;3. putImageData()&quot;">​</a></h4><p><strong>作用</strong>：将图像数据（从指定的 ImageData 对象）放回画布上。</p><p><strong>JavaScript 语法</strong>：<code>context.putImageData(imgData, x, y, dirtyX, dirtyY, dirtyWidth, dirtyHeight)</code></p><p><strong>参数值</strong></p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>imgData</td><td>规定要放回画布上的 ImageData 对象。</td></tr><tr><td>x</td><td>ImageData 对象左上角的 x 坐标，以像素计。</td></tr><tr><td>y</td><td>ImageData 对象左上角的 y 坐标，以像素计。</td></tr><tr><td>dirtyX</td><td>可选。水平值(x)，以像素计，在画布上放置图像的位置。</td></tr><tr><td>dirtyY</td><td>可选。垂直值(y)，以像素计，在画布上放置图像的位置</td></tr><tr><td>dirtyWidth</td><td>可选。在画布上绘制图像所使用的宽度。</td></tr><tr><td>dirtyHeight</td><td>可选。在画布上绘制图像所使用的高度。</td></tr></tbody></table>',42),h=[o];function g(i,p,n,s,c,m){return e(),a("div",null,h)}const D=t(r,[["render",g]]);export{_ as __pageData,D as default};
